package ru.yandex.practicum.task_tracker;

import ru.yandex.practicum.task_tracker.server.KVServer;

import java.io.IOException;

public class Main {
    public static void main(String[] args) throws IOException {
        /*
        На самом деле очень сложный финальный проект. На мой взгляд, самый сложный из всех предыдущих.
        Тяжело было понять саму суть задания, что как взаимодействует между собой и с чем
        работаем мы как пользователь.
        Понятно, что есть ТЗ ФП, но написать конкретную реализацию было ой как не просто мягко говоря.
        Повезло, что сейчас перерыв в работе, и я с проектом сидел с утра и до поздней ночи, а так мог бы и
        в академ уйти, думаю, не хватило бы времени после работы на проект.
        Хотя, судя по Slack, уже несколько дней назад были ребята сдавшие проект. Где только время берут, возможно
        информацию лучше усваивают =)
        Ну и с адаптерами на LocalDateTime и Duration я столкнулся ещё во время прохождения теории перед ФП.
        Я все задания из тренажёра копирую в IDEA и на одном из них Gson ни в какую не хотел парсить LocalDateTime без
        адаптера, причём именно в IDEA, тогда как в тренажере решение проходило без него (видимо там был встроенный от
        Яндекса). Вот тогда я начал искать информацию про адаптеры и в итоге не зря.
        Безусловно, разбираться в новых вещах и искать информацию нравится, вряд ли был бы толк от обучения, если бы в
        ФП нужно было просто скопировать - вставить строки кода из теоретической части.
        Конечно хочется, чтобы теории было больше, но и кайф от решения каких-то моментов с помощью самоподготовки
        того стоит.
         */
        new KVServer().start();
    }
}